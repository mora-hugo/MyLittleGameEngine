
/* ---- VERTEX SHADER ---- */

#version 420 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aColor;
layout (location = 2) in vec2 aTexCoord;
layout (location = 3) in vec3 aNormal;

uniform mat4 u_ProjectionMatrix;
uniform mat4 u_ViewMatrix;
uniform mat4 u_ModelMatrix;
uniform float u_Time;


out vec2 ourTexCoord;
out vec3 ourColor;
out vec3 ourNormal;
void main() {

    float timeT = u_Time;
    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(aPos.x, aPos.y, aPos.z, 1.0);
    ourColor = aColor;
    ourTexCoord = aTexCoord;
    ourNormal = aNormal;
}

/* ---- FRAGMENT SHADER ---- */

#version 420 core
out vec4 FragColor;
in vec3 ourNormal;

layout (binding = 0) uniform Lights
{
    float ambientLightIntensity;
    vec3 lightPos;
    vec3 lightColor;
};
layout (binding = 1) uniform Camera
{
    vec3 viewPos;
};
void main()
{
    FragColor = vec4(lightColor,1.0);
}
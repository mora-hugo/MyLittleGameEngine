
/* ---- VERTEX SHADER ---- */

#version 330 core

layout (location = 0) in vec3 aPos;

uniform mat4 u_ProjectionMatrix;
uniform mat4 u_ViewMatrix;
uniform mat4 u_ModelMatrix;
uniform float u_Time;

out vec2 TexCoord;

void main() {
    vec3 pos = aPos;

    // Génération d'ondes sinusoïdales basées sur la position + le temps
    float wave1 = sin(u_Time * 2.0 + aPos.x * 2.0) * 0.1;
    float wave2 = cos(u_Time * 1.5 + aPos.z * 2.0) * 0.1;

    pos.y += wave1 + wave2; // Applique la hauteur des vagues

    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(pos, 1.0);

    // Coordonnées UV pour effet visuel (si tu veux ajouter une texture plus tard)
    TexCoord = aPos.xz;
}

/* ---- FRAGMENT SHADER ---- */

#version 330 core

out vec4 FragColor;

in vec3 ourColor;
void main() {
    FragColor = vec4(ourColor,1);
}
